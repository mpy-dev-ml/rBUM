name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  XCODE_VERSION: 15.2

jobs:
  lint:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: swiftlint lint --strict
    
    - name: Run Swift Format Check
      run: swift-format lint -r .
      
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Build Core Framework
      run: |
        xcodebuild build -scheme Core \
          -destination 'platform=macOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ENABLE_TESTABILITY=YES
    
    - name: Test Core Framework
      run: |
        xcodebuild test -scheme Core \
          -destination 'platform=macOS' \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Build rBUM App
      run: |
        xcodebuild build -scheme rBUM \
          -destination 'platform=macOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ENABLE_TESTABILITY=YES
    
    - name: Test rBUM App
      run: |
        xcodebuild test -scheme rBUM \
          -destination 'platform=macOS' \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Generate Code Coverage Report
      run: |
        xcrun xccov view --report --json \
          $(find . -name "*.xcresult" | head -n 1) > coverage.json
    
    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  analyze:
    name: Static Analysis
    runs-on: macos-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Run Static Analyzer
      run: |
        xcodebuild analyze -scheme rBUM \
          -destination 'platform=macOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          CLANG_ANALYZER_OUTPUT=plist-html \
          CLANG_ANALYZER_OUTPUT_DIR="$(pwd)/analyzer-results"
    
    - name: Upload Analysis Results
      uses: actions/upload-artifact@v3
      with:
        name: analyzer-results
        path: analyzer-results

  documentation:
    name: Documentation
    runs-on: macos-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Build Documentation
      run: |
        xcodebuild docbuild -scheme Core \
          -destination 'platform=macOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Upload Documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: ~/Library/Developer/Xcode/DerivedData/*/Build/Products/Debug/Core.doccarchive
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ~/Library/Developer/Xcode/DerivedData/*/Build/Products/Debug/Core.doccarchive
